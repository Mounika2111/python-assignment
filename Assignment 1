{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyMdkG9aylY15OnxTILlxgfd",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Mounika2111/python-assignment/blob/main/Assignment%201\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qVve6oEgOi57"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "import re\n",
        "\n",
        "\n",
        "def is_user_exists(username):\n",
        "    with open(\"users_list.txt\", \"r+\") as file:\n",
        "        users = file.readlines()\n",
        "        user_names = [line.split(\"||\")[0] for line in users]\n",
        "        if username in user_names:\n",
        "            return True\n",
        "        else:\n",
        "            return False\n",
        "\n",
        "def get_user_password(username):\n",
        "    with open(\"users_list.txt\", \"r+\") as file:\n",
        "        users = file.readlines()\n",
        "        for user in users:\n",
        "            email = user.strip().split(\"||\")[0]\n",
        "            pwd = user.strip().split(\"||\")[1]\n",
        "            if username == email:\n",
        "                return pwd\n",
        "\n",
        "def set_new_password(username,password):\n",
        "    with open(\"users_list.txt\", \"r\") as f:\n",
        "        users = f.readlines()\n",
        "    with open(\"users_list.txt\", \"w\") as f:\n",
        "        for user in users:\n",
        "            if user.split(\"||\")[0] != username:\n",
        "                f.write(user)\n",
        "            else:\n",
        "                f.write(username + \"||\" + password + \"\\n\")\n",
        "    print(\"Password reset done\")\n",
        "\n",
        "def create_user(username, password):\n",
        "    if is_user_exists(username):\n",
        "        print(\"User already exists, Please login\")\n",
        "        return 0\n",
        "    else:\n",
        "        with open(\"users_list.txt\", \"a+\") as file:\n",
        "            file.write(username + \"||\" + password + \"\\n\")\n",
        "        print(\"Registration Successful\")\n",
        "\n",
        "\n",
        "def register():\n",
        "    while True:\n",
        "        print(\"Email/Username : \", end=\"\")\n",
        "        email = input()\n",
        "        regex = '[A-Za-z]+[^@]*@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}'\n",
        "        if (re.fullmatch(regex, email)):\n",
        "            while True:\n",
        "                print(\"Password : \", end=\"\")\n",
        "                password = input()\n",
        "                regex = '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,15}$'\n",
        "                if (re.fullmatch(regex, password)):\n",
        "                    create_user(email, password)\n",
        "                    return\n",
        "                else:\n",
        "                    print(\"Invalid password\")\n",
        "        else:\n",
        "            print(\"Invalid Email format\")\n",
        "\n",
        "def login():\n",
        "    print(\"Email/Username : \", end=\"\")\n",
        "    username = input()\n",
        "    if is_user_exists(username):\n",
        "        print(\"Password : \", end=\"\")\n",
        "        password = input()\n",
        "        if password == get_user_password(username):\n",
        "            print(\"Hi \", username, \" Greetings!\")\n",
        "            print(\"Returning to home screen\")\n",
        "            return\n",
        "        else:\n",
        "            print(\"Incorrect password , please choose from below: \")\n",
        "            print(\"1.Retrive old password \\t 2.Reset Password \\t 3.Exit\")\n",
        "            ch = input(\"-->\")\n",
        "            if ch == '1':\n",
        "                print(\"Old password:\",get_user_password(username))\n",
        "            elif ch == '2':\n",
        "                while True:\n",
        "                    print(\"New Password : \", end=\"\")\n",
        "                    password = input()\n",
        "                    regex = '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,15}$'\n",
        "                    if (re.fullmatch(regex, password)):\n",
        "                        set_new_password(username, password)\n",
        "                        break\n",
        "                    else:\n",
        "                        print(\"Invalid password\")\n",
        "            elif ch == '3':\n",
        "                return\n",
        "            else:\n",
        "                print(\"Incorrect input, please check again\")\n",
        "\n",
        "    else:\n",
        "        print(\"User does not exist, Please register :  \")\n",
        "        register()\n",
        "\n",
        "\n",
        "\n",
        "if __name__=='__main__':\n",
        "    if not os.path.exists(\"users_list.txt\"):\n",
        "        open(\"users_list.txt\", 'a').close()\n",
        "\n",
        "    while True:\n",
        "        print(\"Choose any option : 1.Register \\t 2.Login \\t 3.Exit\")\n",
        "        ch = input(\"-->\")\n",
        "        if ch == '1':\n",
        "            print(\"Registration Form \")\n",
        "            register()\n",
        "        elif ch == '2':\n",
        "            print(\"Login Form\")\n",
        "            login()\n",
        "        elif ch == '3':\n",
        "            break\n",
        "        else:\n",
        "            print(\"Incorrect input, please check again\")\n"
      ]
    }
  ]
}